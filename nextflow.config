cleanup = false

process {
  
  containerOptions = { 
    workflow.containerEngine == "singularity" ? '--nv': ( workflow.containerEngine == "docker" ? ' --runtime=nvidia --gpus "device=${CUDA_VISIBLE_DEVICES:-0}"' : null )       
  }
  
  
  withLabel: with_gpu {
    maxForks = 1
    clusterOptions = { 
      process.executor == "sge" ? '-l gpu=1': ( workflow.executor == "slurm" ? 'TODO': null )       
    }
  }
}

params {
	acoustic_model = "cnn_tdnn_1d_online"
	nthreads = 2
	lm_scale = 10
	sid_similarity_threshold = 13
}

process.executor = 'local'
params.rootdir = "$projectDir"
docker.enabled = false            

env.KALDI_ROOT = "/home/tanel/tools/kaldi"
env.FAIRSEQ_ROOT = "/home/tanel/tools/fairseq"
env.PATH = "/home/tanel/miniconda3/envs/whisperx/bin:$PATH"        


profiles {
    standard {

    }

    docker {
        docker.enabled = true    
        process.container = 'eu.gcr.io/speech2text-218910/est-asr-pipeline:0.2c'
        params.rootdir = "/opt/est-asr-pipeline"
        env.KALDI_ROOT = "/opt/kaldi"
        env.FAIRSEQ_ROOT = "/opt/fairseq"    
        env.ET_G2P_ROOT = "/opt/et-g2p"
        env.PATH = "/opt/miniconda3/bin:$PATH"  
        env.LD_LIBRARY_PATH = "/usr/local/nvidia/lib:/usr/local/nvidia/lib64"
    }
    
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
        singularity.envWhitelist = "CUDA_VISIBLE_DEVICES"
        process.container = '.singularity/est-asr-pipeline-0.2c.img'
        params.rootdir = "/opt/est-asr-pipeline"
        env.KALDI_ROOT = "/opt/kaldi"
        env.FAIRSEQ_ROOT = "/opt/fairseq"    
        env.ET_G2P_ROOT = "/opt/et-g2p"        
        env.PATH = "/opt/miniconda3/bin:$PATH:/bin"  
    }

    sge {
        process.executor = 'sge'
        process.memory = '10GB'
        process.penv = 'smp'
    }
    
    slurm {
        process.executor = 'slurm'
        process.memory = '10GB'
    
    }
    
}
